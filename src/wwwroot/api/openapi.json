{
  "openapi": "3.0.1",
  "info": {
    "title": "Weavy API",
    "version": "14.0.0"
  },
  "paths": {
    "/api/apps/{id}/members/{userid}": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "Add a single app member.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user to add.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Remove a single app member.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user to remove.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps/{id}/members": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Add multiple app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "List app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberOutPagedListOut"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Remove multiple app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to remove.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Create an app.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "List apps.",
        "parameters": [
          {
            "name": "Contextual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/{id}": {
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Delete an app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Get app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Apps"
        ],
        "summary": "Update an app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppUp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/{uid}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Get app by uid.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique identifier of the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/init": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Creates app and ensures specified user is member.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs/{id}": {
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Get blob metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blob.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlobOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Upload blobs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlobOut"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs/external": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Create external blob(s).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlobOut"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create a chat room or private chat.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List conversations.",
        "parameters": [
          {
            "name": "Contextual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get a conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/badge": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get number of unread conversations for the authenticated user (grouped by conversation type).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationBadges"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/read": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Mark conversation as read.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "Id of last read message.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Mark conversation as unread.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/pin": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Pin conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Unpin conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/typing": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Indicate that the authenticated user is typing a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of conversation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/directories/{id}": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "Get directory.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of directory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories/{name}": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "Get directory by name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of directory.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "List directories.",
        "parameters": [
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories/{id}/members": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "List directory members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Directory id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/embeds/{id}": {
      "get": {
        "tags": [
          "Embeds"
        ],
        "summary": "Get an embed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of embed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/embeds": {
      "post": {
        "tags": [
          "Embeds"
        ],
        "summary": "Create an embed for the given url.",
        "requestBody": {
          "description": "Contains the URL to retrieve embedding information for.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get file metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/meetings": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create meeting.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/meetings/zoom/events": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ZoomEvent"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoomEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoomEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ZoomEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps/{id}/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Creates a new message in the specified conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Conversation id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOut"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "List messages in the specified conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{id}": {
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Delete a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Messages"
        ],
        "summary": "Updates a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get notification.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/reactions/{id}": {
      "get": {
        "tags": [
          "Reactions"
        ],
        "summary": "Get reaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactionOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reactions"
        ],
        "summary": "Delete a reaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{id}/reactions": {
      "get": {
        "tags": [
          "Reactions"
        ],
        "summary": "List reactions for a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedById",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactionOutPagedListOut"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reactions"
        ],
        "summary": "Create reaction for a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reactions"
        ],
        "summary": "Delete reactions to a message for the authenticated user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{uid}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{uid}/tokens": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Issue an access token for the specified user. Creates the user if it does not exists.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Optional profile data to set when creating the user.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenOut"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Revoke all access tokens for the specified user.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users.",
        "parameters": [
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{ids}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get multiple users.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to get.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/autocomplete": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users based on autocomplete search.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The search phrase to use.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Max number of items to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Optional app id. When set, the result contains a property indicating wheter the user is a member of the specified app or not.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteUserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the authenticated user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhooks.",
        "parameters": [
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookOutPagedListOut"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Registers a webhook.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get a webhook.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the hook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update a webhook registration.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the hook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookIn"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the hook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/webhooks/{id}/deliveries": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhook deliveries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryOutPagedListOut"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppIn": {
        "required": [
          "type",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "tracked_properties": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppInitIn": {
        "required": [
          "app",
          "user"
        ],
        "type": "object",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/AppIn"
          },
          "user": {
            "$ref": "#/components/schemas/UserIn"
          }
        },
        "additionalProperties": false
      },
      "AppOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AppUp": {
        "type": "object",
        "properties": {
          "tracked_properties": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          },
          "uid": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutocompleteUserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "presence": {
            "$ref": "#/components/schemas/PresenceStatus"
          },
          "is_member": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutocompleteUserOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutocompleteUserOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Blob": {
        "required": [
          "media_type",
          "name"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "raw": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BlobIn": {
        "required": [
          "link",
          "name",
          "provider",
          "size"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "raw": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlobOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConversationBadges": {
        "type": "object",
        "properties": {
          "private": {
            "type": "integer",
            "format": "int32"
          },
          "rooms": {
            "type": "integer",
            "format": "int32"
          },
          "chat": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConversationIn": {
        "required": [
          "members"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "ConversationOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "is_pinned": {
            "type": "boolean",
            "nullable": true
          },
          "is_unread": {
            "type": "boolean",
            "nullable": true
          },
          "last_message_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last_message": {
            "$ref": "#/components/schemas/MessageOut"
          }
        },
        "additionalProperties": false
      },
      "DeliveryOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "event_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "action": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "delivered_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "status_code": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DirectoryOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "member_count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectoryOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Embed": {
        "required": [
          "original_url",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32"
          },
          "host": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "original_url": {
            "type": "string",
            "readOnly": true
          },
          "is_link": {
            "type": "boolean"
          },
          "image": {
            "$ref": "#/components/schemas/Blob"
          },
          "type": {
            "$ref": "#/components/schemas/EmbedType"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "author_url": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "provider_url": {
            "type": "string",
            "nullable": true
          },
          "cache_age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedIn": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmbedOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EmbedType"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "author_url": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "provider_url": {
            "type": "string",
            "nullable": true
          },
          "cache_age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "original_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedType": {
        "enum": [
          "none",
          "photo",
          "video",
          "link",
          "rich",
          "audio"
        ],
        "type": "string"
      },
      "EntityOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          }
        },
        "additionalProperties": false
      },
      "EntityType": {
        "enum": [
          "app",
          "file",
          "message",
          "user"
        ],
        "type": "string"
      },
      "FileOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "nullable": true
          },
          "application_url": {
            "type": "string",
            "nullable": true
          },
          "embed_url": {
            "type": "string",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "nullable": true
          },
          "preview_format": {
            "$ref": "#/components/schemas/PreviewFormat"
          },
          "preview_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "comment_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOut"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeetingIn": {
        "required": [
          "provider"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MeetingOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "provider_id": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "join_url": {
            "type": "string",
            "nullable": true
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recording_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "delivered_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marked_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marked_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "presence": {
            "$ref": "#/components/schemas/PresenceStatus"
          }
        },
        "additionalProperties": false
      },
      "MemberOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MessageIn": {
        "type": "object",
        "properties": {
          "blobs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "embed_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meeting_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "app_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/EntityOut"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "attachment_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "nullable": true
          },
          "comment_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOut"
            },
            "nullable": true
          },
          "embed_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "embed": {
            "$ref": "#/components/schemas/Embed"
          },
          "meeting_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meeting": {
            "$ref": "#/components/schemas/MeetingOut"
          },
          "option_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PollOptionOut"
            },
            "nullable": true
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactionOut"
            },
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "additionalProperties": false
      },
      "MessageOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MessageUp": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "blobs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "embed_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meeting_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "actor_id": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserOut"
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "is_unread": {
            "type": "boolean"
          },
          "link": {
            "$ref": "#/components/schemas/EntityOut"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PollOptionOut": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "text": {
            "type": "string",
            "format": "multiline"
          },
          "voter_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "readOnly": true
          },
          "voters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PresenceStatus": {
        "enum": [
          "away",
          "active"
        ],
        "type": "string"
      },
      "PreviewFormat": {
        "enum": [
          "none",
          "audio",
          "code",
          "embed",
          "html",
          "image",
          "pdf",
          "text",
          "video"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReactionIn": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReactionOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "parent": {
            "$ref": "#/components/schemas/EntityOut"
          },
          "content": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReactionOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactionOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenOut": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenUserIn": {
        "type": "object",
        "properties": {
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserIn": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "given_name": {
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "$ref": "#/components/schemas/DirectoryOut"
          },
          "directory_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "picture": {
            "$ref": "#/components/schemas/BlobOut"
          },
          "picture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_admin": {
            "type": "boolean",
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          },
          "presence": {
            "$ref": "#/components/schemas/PresenceStatus"
          }
        },
        "additionalProperties": false
      },
      "UserOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserUp": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebhookIn": {
        "required": [
          "payload_url",
          "triggers"
        ],
        "type": "object",
        "properties": {
          "payload_url": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "format": "uri"
          },
          "secret": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "triggers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebhookOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "payload_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "triggers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WebhookOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ZoomEvent": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "$ref": "#/components/schemas/ZoomEventPayload"
          }
        },
        "additionalProperties": false
      },
      "ZoomEventPayload": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/ZoomEventPayloadObject"
          }
        },
        "additionalProperties": false
      },
      "ZoomEventPayloadObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "host_id": {
            "type": "string",
            "nullable": true
          },
          "topic": {
            "type": "string",
            "nullable": true
          },
          "start_time": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "share_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
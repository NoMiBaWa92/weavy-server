{
  "openapi": "3.0.1",
  "info": {
    "title": "Weavy API",
    "version": "12.1.0"
  },
  "paths": {
    "/api/apps/{id}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Get app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Apps"
        ],
        "summary": "Update an app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Delete an app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of app.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/apps/idf/{identifier}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Get app by identifier.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Identifier of the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "List apps.",
        "parameters": [
          {
            "name": "Contextual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOutPagedListOut"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Create an app.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/{id}/members/{userid}": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "Add a single app member.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user to add.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Remove a single app member.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user to remove.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps/{id}/members": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Add multiple app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "Remove multiple app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to remove.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "List app members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/init": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Creates the app with the supplied identifier and type if it does not exist, creates the user with the supplied iss and sub if it does not exist. Makes sure the user is a member of the app.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppInitIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs/{id}": {
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Get blob metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blob.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlobOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Upload blobs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlobOut"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/blobs/external": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Create external blob(s).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlobIn"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlobOut"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create a chat room or private chat.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List conversations.",
        "parameters": [
          {
            "name": "Contextual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get a conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/badge": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get number of unread conversations for the authenticated user (grouped by conversation type).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationsBadge"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/read": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Mark conversation as read.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Mark conversation as unread.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/pin": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Pin conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Unpin conversation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/conversations/{id}/typing": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Indicate that the authenticated user is typing a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of conversation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/directories/{id}": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "Get directory.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of directory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories/{name}": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "Get directory by name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of directory.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "List directories.",
        "parameters": [
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/directories/{id}/members": {
      "get": {
        "tags": [
          "Directories"
        ],
        "summary": "List directory members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Directory id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/embeds/{id}": {
      "get": {
        "tags": [
          "Embeds"
        ],
        "summary": "Get an embed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of embed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/embeds": {
      "post": {
        "tags": [
          "Embeds"
        ],
        "summary": "Create an embed for the given url.",
        "requestBody": {
          "description": "Contains the URL to retrieve embedding information for.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get file metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/meetings": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create meeting.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/{id}/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Creates a new message in the specified app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOut"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "List messages in the specified app.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "App id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{id}": {
      "put": {
        "tags": [
          "Messages"
        ],
        "summary": "Updates a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageIn"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Delete a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/reactions/{id}": {
      "get": {
        "tags": [
          "Reactions"
        ],
        "summary": "Get reaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactionOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reactions"
        ],
        "summary": "Delete a reaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{id}/reactions": {
      "get": {
        "tags": [
          "Reactions"
        ],
        "summary": "List reactions for a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedById",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactionOutPagedListOut"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reactions"
        ],
        "summary": "Create reaction for a message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionIn"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reactions"
        ],
        "summary": "Delete reactions to a message for the authenticated user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/idf/{iss}/{sub}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by its identifier.",
        "parameters": [
          {
            "name": "iss",
            "in": "path",
            "description": "The issuer that was used when creating the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub",
            "in": "path",
            "description": "The subject that identifies the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users.",
        "parameters": [
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{ids}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get multiple users.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of users to get.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the authenticated user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppIn": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppInitIn": {
        "required": [
          "identifier",
          "iss",
          "sub",
          "type"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "iss": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "sub": {
            "maxLength": 192,
            "minLength": 0,
            "type": "string"
          },
          "directory": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Blob": {
        "required": [
          "media_type",
          "name"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "raw": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BlobIn": {
        "required": [
          "link",
          "name",
          "provider",
          "size"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "raw": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlobOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConversationIn": {
        "required": [
          "members"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "ConversationOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "is_pinned": {
            "type": "boolean",
            "nullable": true
          },
          "is_unread": {
            "type": "boolean",
            "nullable": true
          },
          "last_message_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last_message": {
            "$ref": "#/components/schemas/MessageOut"
          }
        },
        "additionalProperties": false
      },
      "ConversationsBadge": {
        "type": "object",
        "properties": {
          "private": {
            "type": "integer",
            "format": "int32"
          },
          "rooms": {
            "type": "integer",
            "format": "int32"
          },
          "chat": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DirectoryOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "member_count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectoryOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Embed": {
        "required": [
          "original_url",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32"
          },
          "host": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "original_url": {
            "type": "string",
            "readOnly": true
          },
          "is_link": {
            "type": "boolean"
          },
          "image": {
            "$ref": "#/components/schemas/Blob"
          },
          "type": {
            "$ref": "#/components/schemas/EmbedType"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "author_url": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "provider_url": {
            "type": "string",
            "nullable": true
          },
          "cache_age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedIn": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "max_width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max_height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EmbedType"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "author_url": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "provider_url": {
            "type": "string",
            "nullable": true
          },
          "cache_age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnail_height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "original_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedType": {
        "enum": [
          "none",
          "photo",
          "video",
          "link",
          "rich",
          "audio"
        ],
        "type": "string"
      },
      "EntityOut": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityType": {
        "enum": [
          "app",
          "file",
          "message",
          "user"
        ],
        "type": "string"
      },
      "FileOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "nullable": true
          },
          "embed_url": {
            "type": "string",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "nullable": true
          },
          "preview_format": {
            "$ref": "#/components/schemas/PreviewFormat"
          },
          "preview_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "additionalProperties": false
      },
      "MeetingIn": {
        "required": [
          "provider"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MeetingOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "provider_id": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "join_url": {
            "type": "string",
            "nullable": true
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recording_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "delivered_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "read_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "presence": {
            "$ref": "#/components/schemas/PresenceStatus"
          }
        },
        "additionalProperties": false
      },
      "MemberOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MessageIn": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "blobs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "embed_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meeting_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "app_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/EntityOut"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "attachment_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "nullable": true
          },
          "comment_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOut"
            },
            "nullable": true
          },
          "embed_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "embed": {
            "$ref": "#/components/schemas/Embed"
          },
          "meeting_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meeting": {
            "$ref": "#/components/schemas/MeetingOut"
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactionOut"
            },
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "additionalProperties": false
      },
      "MessageOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PresenceStatus": {
        "enum": [
          "away",
          "active"
        ],
        "type": "string"
      },
      "PreviewFormat": {
        "enum": [
          "none",
          "audio",
          "embed",
          "html",
          "image",
          "pdf",
          "text",
          "video"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReactionIn": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReactionOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "parent": {
            "$ref": "#/components/schemas/EntityOut"
          },
          "content": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReactionOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactionOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserIn": {
        "type": "object",
        "properties": {
          "iss": {
            "type": "string",
            "nullable": true
          },
          "sub": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "given_name": {
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iss": {
            "type": "string",
            "nullable": true
          },
          "sub": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "given_name": {
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "directory_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directory": {
            "$ref": "#/components/schemas/DirectoryOut"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_admin": {
            "type": "boolean",
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          },
          "presence": {
            "$ref": "#/components/schemas/PresenceStatus"
          }
        },
        "additionalProperties": false
      },
      "UserOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}